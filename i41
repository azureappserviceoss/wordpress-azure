<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Титульник</title>
    </head>
    <body>
        <p>В современном обществе практически невозможно указать какую либо отрасль науки и производства, в которой бы не применялись микропроцессоры и микро ЭВМ. Как и любой алгоритмический исполнитель, микропроцессор имеет определенную систему команд. Пользователь не может изменить количество, назначение, формат команд, но может использовать данные команды в любом порядке, определяемом логикой решения задачи.</p>
<p>Язык ассемблера &#8212; это символическое представление машинного языка. На низком, аппаратном уровне все процессы машины могут быть приведены в действие исключительно командами машинного языка. Наиболее значительными особенностями языка ассемблера являются:</p>
<ol>
<li>соответствие операторов ассемблера и машинных команд;</li>
<li>средства, которые позволяют регулировать размещение программ и данных в памяти;</li>
<li>макросредства, которые позволяют создавать псевдокоманды более высокого уровня, чем машинные операции.</li>
</ol>
<p>В настоящее время область применения ассемблера ограничена программированием критических по эффективности частей кода (зачастую переписывание нескольких десятков строк критического участка кода на ассемблер может дать выигрыш в скорости в несколько раз), особенно, если там возможно применение специализированных команд.</p>
<p>Также, нередко язык ассемблера применяется как промежуточное представление программы в процессе компиляции.</p>
<p>Существенная часть команд рассчитана на обработку данных. К этим командам относятся сложение, вычитание, умножение, деление, пересылка данных, сдвиги двоичных кодов и многое другое. Данные, которые подлежат обработке в команде, называются операндами.  Они могут находиться в различных местах, в таких как регистр общего назначения, в сегменте данных оперативной памяти, в стеке и так далее. Обращение к операндам может быть выполнено различными способами. Это разнообразие способов и составляет суть методов адресации.</p>
<p>Система команд и методы адресации &#8212; взаимосвязанные между собой понятия. Без применения метода адресации нельзя сформировать конкретные команды, но и эти методы не работают вне конкретных команд.  Под методом адресации понимается способ обращения<br />
команды к обрабатываемому операнду. Методы адресации необходимы как для удобства программирования, так и для эффективной работы программ. В курсовой рассмотрены несколько методов адресации. Одни из методов просты и приводят к краткому формату команды и быстрому доступу к операнду, но при этом объем данных доступных с их помощью ограничен. Другие методы допускают работу со всеми имеющимися в системе данными, но при этом команда увеличивается в длине и на её ввод и выполнение тратится больше времени.</p>
    </body>
</html>
